#!/usr/bin/env ruby
require_relative '../config/environment'

# chord_1 = Chord.new(root: "C", scale: "iv", beats: 4)
# chord_2 = Chord.new(root: "D", scale: "iii", beats: 4)
# puts
# puts "CHORDS"
# puts
# puts "Chord 1, expect the root to be 'C' with the @chord to be [F,A,C]"
# p chord_1.chord
# p "Chord Letters match: #{chord_1.chord == ["F", "A", "C"]}"
# puts
# puts "Chord 2, expect the root to be 'D' with the @chord to be [F#, A, C#]"
# p chord_2.chord
# p "Chord Letters match: #{chord_2.chord == ["F# / Gb", "A", "C# / Db"]}"
# puts
# puts "PROGRESSIONS"
# puts

# prog_1 = Progression.new("E")
# puts "Prog 1, expect self.all = [], @chords = [], @scores = []"
# p "All: #{Progression.all}"
# p "Chords: #{prog_1.chords}"
# p "Scores: #{prog_1.scores}"
# puts
hash = {
    chords: [
        {
            chord_string: "I",
            beats: 4
        },
        {
            chord_string: "iii",
            beats: 2
        },
        {
            chord_string:"iv",
            beats: 2
        }
    ],
    save: true
}
# prog_1.new_from_hash(hash)
# puts "Chords: #{prog_1.chords}"
# puts "Chords: #{prog_1.chord_values}"

score = Score.new
score.name = "Name"
score.artist = "Artist"
score.beats_per_measure = 4
score.add_empty_measures(0)
score.key = "C"

prog_1 = Progression.new
prog_1.new_from_hash(hash)
prog_1.add_score(score)

foo = CLI.new
foo.scores << score
foo.edit_score_menu(score)